Product design
    - Background
        Set the scene for what we're trying to do through a user-centric approach:
        users: profile/persona of our users
        goals: our users' main goals
        pains: obstacles preventing our users from achieving their goals

        Our task    
        users: machine learning developers and researchers.
        goals: stay up-to-date on ML content for work, knowledge, etc.
        pains: too much unlabeled content scattered around the internet.    

    - Value proposition
        product: what needs to be built to help our users reach their goals?
        alleviates: how will the product reduce pains?
        advantages: how will the product create gains?

        Our task
        We will build a platform that helps machine learning developers and researchers stay up-to-date on ML content. 
        We'll do this by discovering and categorizing content from popular sources (Reddit, Twitter, etc.) and displaying it on our platform. 
        For simplicity, assume that we already have a pipeline that delivers ML content from popular sources to our platform. 
        We will just focus on developing the ML service that can correctly categorize the content.
        product: a service that discovers and categorizes ML content from popular sources.
        alleviates: display categorized content for users to discover.
        advantages: when users visit our platform to stay up-to-date on ML content, they don't waste time searching for that content themselves in the noisy internet.

    - Objectives
        Discover ML content from trusted sources to bring into our platform.
        Classify incoming content for our users to easily discover. [OUR FOCUS]
        Display categorized content on our platform (recent, popular, recommended, etc.)

    - Solution
        core features: key features that will be developed.
        integration: how the product will integrate with other services.
        alternatives: alternative solutions that we should considered.
        constraints: limitations that we need to be aware of.
        out-of-scope.: features that we will not be developing for now.
    
        Our task
        Core features:
            predict the correct tag for a given content. [OUR FOCUS]
            user feedback process for incorrectly classified content.
            workflows to categorize ML content that our model is incorrect / unsure about.
        Integrations:
            ML content from reliable sources will be sent to our service for classification.
        Alternatives:
            allow users to add content manually and classify them (noisy, cold start, etc.)
        Constraints:
            maintain low latency (>100ms) when classifying incoming content. [Latency]
            only recommend tags from our list of approved tags. [Security]
            avoid duplicate content from being added to the platform. [UI/UX]
        Out-of-scope:
            identify relevant tags beyond our approved list of tags (natural-language-processing, computer-vision, mlops and other).
            using full-text HTML from content links to aid in classification.

    - Feasibility
        How feasible is our solution and do we have the required resources to deliver it (data, $, team, etc.)?

        Our task
        We have a dataset with ML content that has been labeled. We'll need to assess if it has the necessary signals to meet our objectives.
